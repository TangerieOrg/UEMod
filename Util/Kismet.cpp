#include "Kismet.hpp"
#include <Helpers/String.hpp>

namespace Tangerie::Util {
const char* _expr_to_string(RC::Unreal::EExprToken expr)
{
	using namespace RC::Unreal;
	switch (expr)
	{
	case EX_LocalVariable:
		return "EX_LocalVariable";
	case EX_InstanceVariable:
		return "EX_InstanceVariable";
	case EX_DefaultVariable:
		return "EX_DefaultVariable";
	case EX_Return:
		return "EX_Return";
	case EX_Jump:
		return "EX_Jump";
	case EX_JumpIfNot:
		return "EX_JumpIfNot";
	case EX_Assert:
		return "EX_Assert";
	case EX_Nothing:
		return "EX_Nothing";
	case EX_Let:
		return "EX_Let";
	case EX_ClassContext:
		return "EX_ClassContext";
	case EX_MetaCast:
		return "EX_MetaCast";
	case EX_LetBool:
		return "EX_LetBool";
	case EX_EndParmValue:
		return "EX_EndParmValue";
	case EX_EndFunctionParms:
		return "EX_EndFunctionParms";
	case EX_Self:
		return "EX_Self";
	case EX_Skip:
		return "EX_Skip";
	case EX_Context:
		return "EX_Context";
	case EX_Context_FailSilent:
		return "EX_Context_FailSilent";
	case EX_VirtualFunction:
		return "EX_VirtualFunction";
	case EX_FinalFunction:
		return "EX_FinalFunction";
	case EX_IntConst:
		return "EX_IntConst";
	case EX_FloatConst:
		return "EX_FloatConst";
	case EX_StringConst:
		return "EX_StringConst";
	case EX_ObjectConst:
		return "EX_ObjectConst";
	case EX_NameConst:
		return "EX_NameConst";
	case EX_RotationConst:
		return "EX_RotationConst";
	case EX_VectorConst:
		return "EX_VectorConst";
	case EX_ByteConst:
		return "EX_ByteConst";
	case EX_IntZero:
		return "EX_IntZero";
	case EX_IntOne:
		return "EX_IntOne";
	case EX_True:
		return "EX_True";
	case EX_False:
		return "EX_False";
	case EX_TextConst:
		return "EX_TextConst";
	case EX_NoObject:
		return "EX_NoObject";
	case EX_TransformConst:
		return "EX_TransformConst";
	case EX_IntConstByte:
		return "EX_IntConstByte";
	case EX_NoInterface:
		return "EX_NoInterface";
	case EX_DynamicCast:
		return "EX_DynamicCast";
	case EX_StructConst:
		return "EX_StructConst";
	case EX_EndStructConst:
		return "EX_EndStructConst";
	case EX_SetArray:
		return "EX_SetArray";
	case EX_EndArray:
		return "EX_EndArray";
	case EX_PropertyConst:
		return "EX_PropertyConst";
	case EX_UnicodeStringConst:
		return "EX_UnicodeStringConst";
	case EX_Int64Const:
		return "EX_Int64Const";
	case EX_UInt64Const:
		return "EX_UInt64Const";
	case EX_DoubleConst:
		return "EX_DoubleConst";
	case EX_Cast: // EX_PrimitiveCast in 4.27
		return "EX_Cast";
	case EX_SetSet:
		return "EX_SetSet";
	case EX_EndSet:
		return "EX_EndSet";
	case EX_SetMap:
		return "EX_SetMap";
	case EX_EndMap:
		return "EX_EndMap";
	case EX_SetConst:
		return "EX_SetConst";
	case EX_EndSetConst:
		return "EX_EndSetConst";
	case EX_MapConst:
		return "EX_MapConst";
	case EX_EndMapConst:
		return "EX_EndMapConst";
	case EX_StructMemberContext:
		return "EX_StructMemberContext";
	case EX_LetMulticastDelegate:
		return "EX_LetMulticastDelegate";
	case EX_LetDelegate:
		return "EX_LetDelegate";
	case EX_LocalVirtualFunction:
		return "EX_LocalVirtualFunction";
	case EX_LocalFinalFunction:
		return "EX_LocalFinalFunction";
	case EX_LocalOutVariable:
		return "EX_LocalOutVariable";
	case EX_DeprecatedOp4A:
		return "EX_DeprecatedOp4A";
	case EX_InstanceDelegate:
		return "EX_InstanceDelegate";
	case EX_PushExecutionFlow:
		return "EX_PushExecutionFlow";
	case EX_PopExecutionFlow:
		return "EX_PopExecutionFlow";
	case EX_ComputedJump:
		return "EX_ComputedJump";
	case EX_PopExecutionFlowIfNot:
		return "EX_PopExecutionFlowIfNot";
	case EX_Breakpoint:
		return "EX_Breakpoint";
	case EX_InterfaceContext:
		return "EX_InterfaceContext";
	case EX_ObjToInterfaceCast:
		return "EX_ObjToInterfaceCast";
	case EX_EndOfScript:
		return "EX_EndOfScript";
	case EX_CrossInterfaceCast:
		return "EX_CrossInterfaceCast";
	case EX_InterfaceToObjCast:
		return "EX_InterfaceToObjCast";
	case EX_WireTracepoint:
		return "EX_WireTracepoint";
	case EX_SkipOffsetConst:
		return "EX_SkipOffsetConst";
	case EX_AddMulticastDelegate:
		return "EX_AddMulticastDelegate";
	case EX_ClearMulticastDelegate:
		return "EX_ClearMulticastDelegate";
	case EX_Tracepoint:
		return "EX_Tracepoint";
	case EX_LetObj:
		return "EX_LetObj";
	case EX_LetWeakObjPtr:
		return "EX_LetWeakObjPtr";
	case EX_BindDelegate:
		return "EX_BindDelegate";
	case EX_RemoveMulticastDelegate:
		return "EX_RemoveMulticastDelegate";
	case EX_CallMulticastDelegate:
		return "EX_CallMulticastDelegate";
	case EX_LetValueOnPersistentFrame:
		return "EX_LetValueOnPersistentFrame";
	case EX_ArrayConst:
		return "EX_ArrayConst";
	case EX_EndArrayConst:
		return "EX_EndArrayConst";
	case EX_SoftObjectConst:
		return "EX_SoftObjectConst";
	case EX_CallMath:
		return "EX_CallMath";
	case EX_SwitchValue:
		return "EX_SwitchValue";
	case EX_InstrumentationEvent:
		return "EX_InstrumentationEvent";
	case EX_ArrayGetByRef:
		return "EX_ArrayGetByRef";
	case EX_ClassSparseDataVariable:
		return "EX_ClassSparseDataVariable";
	case EX_FieldPathConst:
		return "EX_FieldPathConst";
	case EX_Max:
		return "EX_Max";
	}
	return "unknown";
};

std::wstring expr_to_string(RC::Unreal::EExprToken expr) {
	return RC::to_wstring(_expr_to_string(expr));
}
}